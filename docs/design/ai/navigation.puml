@startuml

hide empty members

interface Graph<T> {
  T getNode(int index)
  List<Neighbor<T>> getNeighbors(int index)
}
interface CostCalculator<T> {
  int calculate(T node)
}
interface HeuristicCalculator {
  int calculate(int from, int to)
}
interface SearchAlgorithm {
  Plan find(int start, int goal)
}
class AStar
class AStarNode {
  int index
  int costSoFar
  AStarNode previous
}

class Plan {
  int totalCost
  List<Integer> indices
}

class Neighbor<T> {
  int index
  T neighbor
  int distance
}

SearchAlgorithm <|-right- AStar
SearchAlgorithm *-- Graph
SearchAlgorithm *-- CostCalculator
SearchAlgorithm -left- Plan

AStar *-- HeuristicCalculator

AStar -- AStarNode

Graph *-- T : nodes
Graph -- Neighbor


@enduml